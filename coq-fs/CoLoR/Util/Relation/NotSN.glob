DIGEST 9cdab6948c825bd229dbdbfbb05d41c9
FCoLoR.Util.Relation.NotSN
R218:228 CoLoR.Util.Logic.ClassicUtil <> <> lib
R230:231 CoLoR.Util.Relation.SN <> <> lib
R233:241 Coq.Relations.Relations <> <> lib
R243:251 CoLoR.Util.Logic.LogicUtil <> <> lib
sec 263:263 <> S
var 280:280 S A
var 291:291 S R
var 308:308 S x
var 316:316 S h
R295:302 Coq.Relations.Relation_Definitions <> relation def
R304:304 CoLoR.Util.Relation.NotSN <> A var
R312:312 CoLoR.Util.Relation.NotSN <> A var
R320:320 Coq.Init.Logic <> :type_scope:'~'_x not
R321:322 CoLoR.Util.Relation.SN <> SN ind
R326:326 CoLoR.Util.Relation.NotSN <> x var
R324:324 CoLoR.Util.Relation.NotSN <> R var
prf 339:348 <> notSN_succ
R352:358 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R360:361 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R367:370 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R362:362 CoLoR.Util.Relation.NotSN <> S.R var
R366:366 CoLoR.Util.Relation.NotSN <> y var
R364:364 CoLoR.Util.Relation.NotSN <> S.x var
R371:371 Coq.Init.Logic <> :type_scope:'~'_x not
R372:373 CoLoR.Util.Relation.SN <> SN ind
R377:377 CoLoR.Util.Relation.NotSN <> y var
R375:375 CoLoR.Util.Relation.NotSN <> S.R var
R399:400 Coq.Init.Logic <> :type_scope:'~'_x not
R426:426 Coq.Init.Logic <> :type_scope:'~'_x not
R416:419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R420:421 CoLoR.Util.Relation.SN <> SN ind
R425:425 CoLoR.Util.Relation.NotSN <> y var
R423:423 CoLoR.Util.Relation.NotSN <> S.R var
R411:411 CoLoR.Util.Relation.NotSN <> S.R var
R415:415 CoLoR.Util.Relation.NotSN <> y var
R413:413 CoLoR.Util.Relation.NotSN <> S.x var
R399:400 Coq.Init.Logic <> :type_scope:'~'_x not
R426:426 Coq.Init.Logic <> :type_scope:'~'_x not
R416:419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R420:421 CoLoR.Util.Relation.SN <> SN ind
R425:425 CoLoR.Util.Relation.NotSN <> y var
R423:423 CoLoR.Util.Relation.NotSN <> S.R var
R411:411 CoLoR.Util.Relation.NotSN <> S.R var
R415:415 CoLoR.Util.Relation.NotSN <> y var
R413:413 CoLoR.Util.Relation.NotSN <> S.x var
R446:472 CoLoR.Util.Logic.ClassicUtil <> not_forall_imply_exists_not thm
R446:472 CoLoR.Util.Logic.ClassicUtil <> not_forall_imply_exists_not thm
R500:511 Coq.Logic.Classical_Prop <> imply_to_and thm
R500:511 Coq.Logic.Classical_Prop <> imply_to_and thm
R550:564 CoLoR.Util.Logic.LogicUtil <> contraposee_inv thm
R550:564 CoLoR.Util.Logic.LogicUtil <> contraposee_inv thm
R573:580 CoLoR.Util.Relation.SN <> SN_intro constr
R573:580 CoLoR.Util.Relation.SN <> SN_intro constr
R589:589 CoLoR.Util.Relation.NotSN <> S.h var
R589:589 CoLoR.Util.Relation.NotSN <> S.h var
R604:604 CoLoR.Util.Relation.NotSN S <> sec
